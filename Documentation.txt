Документация по интернет - магазину Samarskaya.com
проект лежит на репозитории https://github.com/VladislavPlakhtiy/PLIT  
папка AtoITCore (easy version)

БД на данный момент,  состоит из 3х таблиц
1.Product   2.Photo  3.Reviews
Таблица Product связанна с таблицей Photo 1 ко многим (1н продукт, много фотографий)

Сущности
1. Product – основное описание продукта.
        ProductId    - Id
        Name         - Название товара
        Description  - Описание (может быть null)
        SpecOffer    - специальное предложение (может быть null)
        Price        - цена
        DateCreate   - дата добавления в БД (для сортировки)
        Quantity     - количество (может быть null)
        Existence    - наличие в магазине (может быть null)
        Category     - к какой категории принадлежит (int) На данный момент, для магазина
                       нужно 3 категории. 1 – страница продажи, 2 – страница галереи,
                       3 –платья партнеров на продажу (для фильтра) 
        Photo        - коллекция Photo
2. Photo – фотографии продукта.
        PhotoId  - id
        Priority – приоритет для показа (bool) – определяет какую фотографию конкретного
                   платья показывать в слайдере, или в качестве основной фотографии        
                   на страницах продаж.   
        PhotoUrl – string для формирования пути к фотографии платья 
                   (должен быть атрибут уникальности – пока убрано, для удобства)
                   (по факту - название картинки, которую загружают на сервер)
        Product  - ключ связи с таблицей продукты.

3. Reviews  - таблица с отзывами клиентов

      ReviewId       - id
        ClientName     – имя пишущего отзыв
        ClientFeedback - отзыв
        Rating         - рейтинг ( 1-5) может быть null
        DateFeedback   – дата создания отзыва (сортировка)

(остальные сущности, которые лежат в библиотеке Domain пока не используются)

<______________________________________________nuget packages________________________________________________________>
"Antlr" version="3.4.1.9004" - помагает проверять орфографические ошибки (для заполнения форм)
"EntityFramework" version="6.1.3" - формирование и работа с БД
"Microsoft.AspNet.Mvc" version="5.2.3" - паттерн построения сайта.
"Microsoft.AspNet.Razor" version="3.2.3" - движок формирования представлений
"Microsoft.AspNet.Web.Optimization" version="1.0.0" - построение связок css и Js
"Microsoft.AspNet.WebApi" version="4.0.20710.0" - не совсем понимаю зачем он в проекте... Упрощенная версия WCF для веба, построение сервисов под IIS
  Но сервисов, в моем понимании, у нас нет (ну к примеру какой - то чат), так что сомнительна необходимость. Может не прав..
"Microsoft.AspNet.WebPages" version="3.2.3" - формирование представлений
"Microsoft.CodeDom.Providers.DotNetCompilerPlatform" version="1.0.0" - не знаю что это :(
id="Microsoft.Net.Compilers" version="1.0.0" - теже не в курсе..
"Microsoft.Net.Http" version="2.0.20710.0" - обработка HTTP запросов (get, post...) не знаю, может этот пакет вместе с какими то другими.
"Microsoft.Web.Infrastructure" version="1.0.0.0" - тоже пакет для протоколов
"MVC4.Paging" version="2.0.0" - симпотичный пейджинг
"Newtonsoft.Json" version="5.0.4" - обменник данными, скорее всего для сериализации ajax запросов. Подзабыл..
"WebGrease" version="1.1.0" - шел вместе с пейджингом.
<______________________________________________nuget packages________________________________________________________>

-----------------------------------------------------------------------------Функционал страниц сайта (позже уберу, это больше к ТЗ относиться)----------------------------------
_Layout – общий для страниц , кроме страницы админ -  панели.
Содержит: Шапка - логотип, кнопки – корзина (с отображением  количества добавленных продуктов), фейсбук, твиттер, навигационное меню,   футер.
1.	«О Дизайнере»
          – слайдер (фотографии вытягиваются из базы, + при клике на фотографию – перенаправление на ту страницу, к какой категории продукта принадлежит фотография)
         Остальное  - статический контент, описание дизайнера, его биография …
2.	«ONLINE-гардероб» 
        - страница, на которой отображаются блоками платья 
        (1 фото с высоким приоритетом, + название + цена) 
        Подключается постраничный вывод (к примеру, 20 платьев на 1й странице). 
        Так же, появляется плавающая кнопка расположенная в нижнем правом углу – корзина, с отображением количества товаров
        (при клике на которую открывается форма оформления заказа (iframe) ).
        При клике на блок с продуктом –  всплывает окошко (iframe)  с подробными описаниями платья, и со встроенным слайдером, для просмотра фотографий этого платья
       (ну примерно как на Розетке одна фотография большая и несколько маленьких, при клике на маленькую она перемещается в область большой, при клике на большую – разворачивается полный размер фотографии), 
        так же появляется кнопка – «добавить в корзину».
        При клике на кнопку «добавить в корзину» - появляется окно(iframe)  с благодарностями за выбор, 
        и 2мя кнопками – «Оформить заказ» и «Продолжить покупку»
        При клике на кнопку «Продолжить покупку» - закрываются всплывающие окна, и добавляется товар в корзину 
        (+ отображается возле кнопки корзина)
        При клике на кнопку «Оформить заказ» - всплывает (iframe) окно с формой оформления заказа, где можно удалить товар из корзины, 
        показывается сумма товаров, и пользователь вводит свои контактные данные, выбирает способ доставки и т.п. 
        В этой форме есть кнопка –  «Оформить покупку», при нажатии на которую, идет сбор информации с формы, и отправка на почту продавцу и покупателю письма с инструкциями. 
3.	«Галерея»
        На этой странице отображаются блоками фотографии платьев, которые уже проданы, и их название (фильтрация по категории 2) 
        + постраничный вывод.
4.	«Партнерское» 
        Страница аналогична странице «ONLINE-гардероб», только товары туда подтягиваться по категории 3.
5.	«Отзывы»
        Страница с отзывами, подтянутыми из БД + постраничный вывод + форма добавления отзыва.

Админ – панель 
Включает в себя возможность редактирования, удаление отзывов, добавление, удаление и редактирование, товаров.

Это очень вкратце, более полное ТЗ которое писал Влад, тоже закину в репозиторий.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------18.07.2017--------------------------------------------------------------------------------------------------
Описал логику передачи модели во View на страницу «ONLINE-гардероб» и «Партнерское»
Возможно нужно как - то по другому, пока сделал как смог.
Добавил в проект стили, которые дали фронтэндщики.
Закоментировал все то, что не понимаю "зачем" :) 
nuget пакеты - пока не трогал.
BundleConfig - тоже пока убрал, подключаю стили и скрипты в ручную.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Исключаем из репозитория бинарные файлы и пакеты! Они атоматически создадуться при первом же билде.
2. Предотвращаем попадание бинарников в проект (файл .gitignore - http://uleming.github.io/gitbook/4_%D0%98%D0%B3%D0%BD%D0%BE%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D1%84%D0%B0%D0%B9%D0%BB%D0%BE%D0%B2.html).
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------23.07.2017--------------------------------------------------------------------------------------------------
1.	Рекомендации о том, что что-то можно сделать лучше, конечно есть, но они будут всегда. :) Но пока они не в приоритете. В целом проект развивается. Какие сейчас есть трудности?

2.	Есть рекомендация, перед каждой новой версией продукта рекомендуется обновлять все Nuget-пакеты, но не рекомендую использовать бета-версии. 

3.	Инфо по пакетам, которые были непонятны:
	- "Microsoft.AspNet.WebApi" - использовался бы, если бы не использовали Razor, а Фронт делали бы исключительно Фронт-щики...
	- "Microsoft.CodeDom.Providers.DotNetCompilerPlatform" и "Microsoft.Net.Compilers" для динамической компиляции. Не заморачивайся.
	- "Newtonsoft.Json" - сериализатор JSON-a в объекты и наоборот. Так же и для сериализации ajax запросов.

4.	Bootstrap, вроде как не используется... Может вырезать тогда его CSS и JS или он всё же планируется?  

5.	Так же я бы обновил проект с 4.5.1 до 4.6.2. Хостинг позволяет. А потом можно будет и про .Net Core подумать. =)

6.	Влад говорил, что есть вопросы по БД - какие именно? База сейчас автогенерится автоматически по CodeFirst - и этого на данном этапе достаточно. Можно немного поменять структуру записей в БД. Но опять же - текущая тоже работоспособна. Хотя, у меня есть вопросы…

7.	Но не понятно зачем, "Entities" и "Models" разнесены по разным проектам. Для небольшого приложения вроде нашего, отдельный проект для Domain-данных, кажется только усложняет работу.

8.	Вопрос второй. Как и когда создаётся текущая БД, если она добавлена в .gitignore ?

9.	И зачем в объекте «Product» св-во «Existence» если это по факту то же, что и «Quantity» < 1 … ? или нет?
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------xx.07.2017--------------------------------------------------------------------------------------------------
